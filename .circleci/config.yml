version: 2.1

executors:
  node8:
    docker:
      # use latest node 8 on debian 8 (jessie)
      - image: circleci/node:8-jessie
    environment:
      NPM_CONFIG_PREFIX: ~/.npm-global

commands:
  setup:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: install npm 6.4.1
          command: sudo npm -g install npm@6.4.1
      - run:
          name: Installing Dependencies
          command: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: prepare test git user
          command: git config --global user.email "circleci@project-helix.page" && git config --global user.name "CircleCi Build"

jobs:
  build:
    executor: node8
    steps:
        - setup

        - run:
            name: Lint
            command: npm run lint

        # - run:
        #     name: Installing Dependencies
        #     command: test -f package.json && npm install || echo "package.json does not exist"

        # - run:
        #     name: Installing Helix CLI
        #     command: npm install @adobe/helix-cli --save=false

        # - run:
        #     name: Reset package-lock.json
        #     command:  test ! -f package.json && rm package-lock.json || echo "package.json exists"

        # - run:
        #     name: Building Templates
        #     command: npx hlx build

        # - run:
        #     name: Resetting Working Copy
        #     command: git status; git checkout -- .

        # - run:
        #     name: Deploying to Adobe I/O Runtime
        #     command: npx hlx deploy | cat

        # - run:
        #     name: Activate CDN
        #     command: npx hlx publish | cat

        # - run:
        #     name: Test Performance
        #     command: |
        #         mkdir -p junit
        #         if [ ! -z $HLX_CALIBRE_AUTH ]; then
        #             npx hlx perf --junit junit/test-results.xml
        #         else
        #             echo "Add HLX_CALIBRE_AUTH to your CircleCI config to enable performance testing"
        #         fi

        # - store_test_results:
        #     path: junit
  publish:
    executor: node8
    steps:
      - setup

      - run:
          name: Installing Helix CLI
          command: npm install @adobe/helix-cli --save=false

      - run:
          name: Build Templates
          command: npx hlx build

      - run:
          name: Reset Working Copy
          command: git status; git checkout -- .

      - run:
          name: Deploy to Adobe I/O Runtime
          command: npx hlx deploy --add autodeploy | cat

      - run:
          name: Publish to Fastly
          command: npx hlx publish --custom-vcl='vcl/extensions.vcl' | cat

workflows:
  version: 2
  build:
    jobs:
      - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only: auto-publish

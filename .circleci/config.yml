version: 2.1

executors:
  node8:
    docker:
      # use latest node 8 on debian 8 (jessie)
      - image: circleci/node:8-jessie
    environment:
      NPM_CONFIG_PREFIX: ~/.npm-global

references:
  run_smoketests: &run_smoketests
    executor: node8
    steps:

commands:
  setup:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: install npm 6.11.2
          command: sudo npm -g install npm@6.11.2
      - run:
          name: Installing Dependencies
          command: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: prepare test git user
          command: git config --global user.email "circleci@project-helix.page" && git config --global user.name "CircleCi Build"

jobs:
  build:
    executor: node8
    steps:
      - setup
      - run:
          name: Lint
          command: npm run lint

  init_smoketests:
    executor: node8
    steps:
      - setup
      - run:
          name: Installing Helix CLI
          command: npm install @adobe/helix-cli@">=5" --save=false
      - run:
          name: Build Templates
          command: npx hlx build
      - run:
          name: Deploy to Adobe I/O Runtime
          command: npx hlx deploy --add test_$CIRCLE_BUILD_NUM | cat
      - run:
          name: Compute TEST_DOMAIN and TEST_SERVICE
          command: |
              modulo=$(expr $CIRCLE_BUILD_NUM % 3 + 1)
              name="TEST_DOMAIN_$modulo"
              TEST_DOMAIN=${!name}
              name="TEST_SERVICE_$modulo"
              TEST_SERVICE=${!name}
              mkdir -p env
              # "pass" the variable to the next steps...
              echo "export TEST_DOMAIN=$TEST_DOMAIN" >> env/TEST_DOMAIN
              echo "export TEST_SERVICE=$TEST_SERVICE" >> env/TEST_SERVICE
              cat env/TEST_DOMAIN >> $BASH_ENV
              cat env/TEST_SERVICE >> $BASH_ENV
              # debug logs
              echo "A TEST_DOMAIN has been computed - $TEST_DOMAIN"
              echo "A TEST_SERVICE has been computed - $TEST_SERVICE"
      - run:
          name: Publish to Fastly
          command: npx hlx publish --custom-vcl='vcl/extensions.vcl' --fastly-serviceid $TEST_SERVICE | cat
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
            - .npm

  run_smoketests:
    executor: node8
    parameters:
        owner:
            type: string
            description: the owner of the git repo that hosts the "hlxPagesSmokeTest" tests
        repo:
            type: string
            description: the name of the git repo that hosts the "hlxPagesSmokeTest" tests
        branch:
            type: string
            default: master
            description: the branch of the git repo that hosts the "hlxPagesSmokeTest" tests
        script:
            type: string
            default: test:hlxPagesSmokeTest
            description: the name of the npm script to run
    steps:
      - attach_workspace:
          at: /home/circleci

      - run:
          name: Load TEST_DOMAIN
          command: |
            cat env/TEST_DOMAIN >> $BASH_ENV
            cat env/TEST_SERVICE >> $BASH_ENV

      # TODO clone repo, np
      - run:
          name: Clone repo
          command: git clone --single-branch --branch << parameters.branch >> --depth 1 https://github.com/<< parameters.owner >>/<< parameters.repo >>

      - run:
          name: Installing Helix CLI
          command: npm install
          cwd: << parameters.repo >>

      - run:
          name: Run Helix Pages smoke tests
          command: npm run << parameters.script >>
          cwd: << parameters.repo >>

      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
            - .npm

  finalize_smoketests:
    executor: node8
    steps:
      - attach_workspace:
          at: /home/circleci

      - store_test_results:
          path: junit

      - store_artifacts:
          path: junit

      - save_cache:
          paths:
          - /home/circleci/.npm
          key: v5-dependencies-{{ arch }}-continuous-npm-cache

  publish:
    executor: node8
    steps:
      - setup

      - run:
          name: Installing Helix CLI
          command: npm install @adobe/helix-cli@">=5" --save=false

      - run:
          name: Build Templates
          command: npx hlx build

      - run:
          name: Reset Working Copy
          command: git status; git checkout -- . ; git pull

      - run:
          name: Deploy to Adobe I/O Runtime
          command: npx hlx deploy | cat

      - run:
          name: Publish to Fastly
          command: npx hlx publish --custom-vcl='vcl/extensions.vcl' | cat

      - add_ssh_keys
      - run:
          name: Commit helix config to master
          command: |
            git checkout master
            git pull --tags origin
            git commit -am "ðŸš¢ enshrining config post-deploy [ci skip]"

      - run:
          name: Tag known good deploy
          command: |
            git tag `date "+known-good-%Y%m%d%H%M%S"`
            git push --tags origin master

      - run:
          name: Semantic Release
          command: npm run semantic-release

workflows:
  version: 2
  build:
    jobs:
      - build
      - init_smoketests:
          requires:
            - build
      - run_smoketests:
          name: adobe/helix-pages#smoke-tests
          owner: adobe
          repo: helix-pages
          branch: smoke-tests
          requires:
            - init_smoketests
      - run_smoketests:
          name: adobe/helix-example-basic#smoke-tests
          owner: adobe
          repo: helix-example-basic
          branch: smoke-tests
          requires:
            - init_smoketests
      - finalize_smoketests:
          requires:
            - adobe/helix-pages#smoke-tests
            - adobe/helix-example-basic#smoke-tests
      - publish:
          requires:
            - finalize_smoketests
          filters:
            branches:
              only: master
